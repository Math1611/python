[
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.01_append",
        "description": "python.01_append",
        "peekOfCode": "mi_lista = []\n#añadir valores a la lista\nmi_lista.append(30)\nmi_lista.append(20)\nmi_lista.append(10)\nprint(mi_lista)",
        "detail": "python.01_append",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.02_pop",
        "description": "python.02_pop",
        "peekOfCode": "mi_lista = [10, 20, 30, 40]\n#eliminar el valor en la posición\neliminado = mi_lista.pop(2)\nprint(mi_lista)\nprint(eliminado)",
        "detail": "python.02_pop",
        "documentation": {}
    },
    {
        "label": "eliminado",
        "kind": 5,
        "importPath": "python.02_pop",
        "description": "python.02_pop",
        "peekOfCode": "eliminado = mi_lista.pop(2)\nprint(mi_lista)\nprint(eliminado)",
        "detail": "python.02_pop",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.03_index",
        "description": "python.03_index",
        "peekOfCode": "mi_lista = [30, 10, 20, 40]\n#Obtener el valor del índice\nindice = mi_lista.index(30)\nprint(indice) #salida deberia ser 0",
        "detail": "python.03_index",
        "documentation": {}
    },
    {
        "label": "indice",
        "kind": 5,
        "importPath": "python.03_index",
        "description": "python.03_index",
        "peekOfCode": "indice = mi_lista.index(30)\nprint(indice) #salida deberia ser 0",
        "detail": "python.03_index",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.04_reverse",
        "description": "python.04_reverse",
        "peekOfCode": "mi_lista = [10, 20, 30, 40]\n#invertir el orden de los elementos\nmi_lista.reverse()\nprint(mi_lista)",
        "detail": "python.04_reverse",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.05_reverse",
        "description": "python.05_reverse",
        "peekOfCode": "mi_lista = [40, 50, 60, 10]\n#ordenar de menor a mayor\nmi_lista.sort()\nprint(mi_lista)",
        "detail": "python.05_reverse",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.06slicing",
        "description": "python.06slicing",
        "peekOfCode": "mi_lista = [10, 30, 40, 50, 60]\nprint(mi_lista[1:3])\nprint(mi_lista[2:])",
        "detail": "python.06slicing",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.3.1obtenerelindice",
        "description": "python.3.1obtenerelindice",
        "peekOfCode": "mi_lista = [\"manzanas\", \"platanos\", \"cerezas\", \"tomates\"]\nprint(mi_lista[0])\nprint(mi_lista[3])\nprint(mi_lista[1])",
        "detail": "python.3.1obtenerelindice",
        "documentation": {}
    },
    {
        "label": "mi_lista",
        "kind": 5,
        "importPath": "python.3.2cambiarelvalor",
        "description": "python.3.2cambiarelvalor",
        "peekOfCode": "mi_lista = [10, 30, 40, 50]\nmi_lista [-1] = 8\nprint(mi_lista)",
        "detail": "python.3.2cambiarelvalor",
        "documentation": {}
    },
    {
        "label": "lista_bandas",
        "kind": 5,
        "importPath": "python.explorador",
        "description": "python.explorador",
        "peekOfCode": "lista_bandas = [\"GnR\", \"Pantera\", \"black Sabbath\", \"SOAD\", \"Nirvana\"]\n#acceder al tercer elemento de la lista\nprint(lista_bandas[3])\n#cambio el último valor\nlista_bandas [-1] = \"Metallica\"\n#agregar nuevo elemento al final de la lista\nlista_bandas.append(\"slayer\")\n#cambiar el valor al elemento 2\nlista_bandas [2] = \"antrax\"\n#elimino un elemento usando su valor",
        "detail": "python.explorador",
        "documentation": {}
    },
    {
        "label": "eliminado",
        "kind": 5,
        "importPath": "python.explorador",
        "description": "python.explorador",
        "peekOfCode": "eliminado = lista_bandas.pop(0)\n#encontrar la posicion del elemento con .index()\nindice = lista_bandas.index(\"slayer\")\n#\nlista_bandas.sort()\nprint(indice)\nprint(lista_bandas)",
        "detail": "python.explorador",
        "documentation": {}
    },
    {
        "label": "indice",
        "kind": 5,
        "importPath": "python.explorador",
        "description": "python.explorador",
        "peekOfCode": "indice = lista_bandas.index(\"slayer\")\n#\nlista_bandas.sort()\nprint(indice)\nprint(lista_bandas)",
        "detail": "python.explorador",
        "documentation": {}
    },
    {
        "label": "tareas",
        "kind": 5,
        "importPath": "python.mision",
        "description": "python.mision",
        "peekOfCode": "tareas = [\"Sacar dinero del banco\", \n          \"hacer la colada\", \n          \"dar un paseo\", \n          \"cortarse el cabello\",\n          \"preparar el te\",\n          \"Terminar el capítulo de Listas\",\n          \"llamar a mamá\",\n          \"Ver mi héroe academía\"]\nprint(tareas[0])\nprint(tareas[1])",
        "detail": "python.mision",
        "documentation": {}
    },
    {
        "label": "tareas_seguidas",
        "kind": 5,
        "importPath": "python.mision",
        "description": "python.mision",
        "peekOfCode": "tareas_seguidas = tareas[2:5]\nprint(tareas_seguidas)\ntry:\n    error = tareas[8]\nexcept IndexError as e:\n    print(f\"Error detectado -> {e}\")\ntareas += [\"ver dc.house\"]\nprint(tareas)",
        "detail": "python.mision",
        "documentation": {}
    },
    {
        "label": "dato1",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato1 = 42          # num. int\ndato2 = 3.1416      # num. float\ndato3 = \"Python\"    # String\ndato4 = True        #Bool\ndato5 = None        #NoneType\ndato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato2",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato2 = 3.1416      # num. float\ndato3 = \"Python\"    # String\ndato4 = True        #Bool\ndato5 = None        #NoneType\ndato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato3",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato3 = \"Python\"    # String\ndato4 = True        #Bool\ndato5 = None        #NoneType\ndato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato4",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato4 = True        #Bool\ndato5 = None        #NoneType\ndato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato5",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato5 = None        #NoneType\ndato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato6",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato6 = -7          # num. int\ndato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato7",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato7 = 2.5e3       # num. float\ndato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "dato8",
        "kind": 5,
        "importPath": "python.quesoy",
        "description": "python.quesoy",
        "peekOfCode": "dato8 = 'A'         # String\nprint(type(dato3))",
        "detail": "python.quesoy",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.01-creacion",
        "description": "tuplas.01-creacion",
        "peekOfCode": "tupla = (\"elemento1\", \"elemento2\", \"elemento3\")\nprint(tupla)",
        "detail": "tuplas.01-creacion",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.02-acceder",
        "description": "tuplas.02-acceder",
        "peekOfCode": "tupla = (\"A\", \"B\", \"C\")\nprint(tupla[0])\nprint(tupla[1])\nprint(tupla[2])",
        "detail": "tuplas.02-acceder",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.03-len",
        "description": "tuplas.03-len",
        "peekOfCode": "tupla = (1,2,3,4,5)\nprint(len(tupla))",
        "detail": "tuplas.03-len",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.04-existencia",
        "description": "tuplas.04-existencia",
        "peekOfCode": "tupla = (\"python\", \"java\", \"C++\")\nprint(\"python\" in tupla)",
        "detail": "tuplas.04-existencia",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.05-desempaquetado",
        "description": "tuplas.05-desempaquetado",
        "peekOfCode": "tupla = (10, 20, 30)\na,b,c, = tupla\nprint(a, b, c)",
        "detail": "tuplas.05-desempaquetado",
        "documentation": {}
    },
    {
        "label": "a,b,c,",
        "kind": 5,
        "importPath": "tuplas.05-desempaquetado",
        "description": "tuplas.05-desempaquetado",
        "peekOfCode": "a,b,c, = tupla\nprint(a, b, c)",
        "detail": "tuplas.05-desempaquetado",
        "documentation": {}
    },
    {
        "label": "nueva_tupla",
        "kind": 5,
        "importPath": "tuplas.06-concatenar",
        "description": "tuplas.06-concatenar",
        "peekOfCode": "nueva_tupla = tupla1 + tupla2\nprint(nueva_tupla)",
        "detail": "tuplas.06-concatenar",
        "documentation": {}
    },
    {
        "label": "tupla",
        "kind": 5,
        "importPath": "tuplas.07-metodo",
        "description": "tuplas.07-metodo",
        "peekOfCode": "tupla = (\"A\", \"B\", \"C\")\nprint(tupla.index(\"B\"))\n#Count() cuenta cuantas veces aparece un elemento tupla\nprint(tupla.count(\"C\"))",
        "detail": "tuplas.07-metodo",
        "documentation": {}
    },
    {
        "label": "pistas",
        "kind": 5,
        "importPath": "tuplas.sherlock",
        "description": "tuplas.sherlock",
        "peekOfCode": "pistas = (\"Puerta Roja\", 221, \"Londres\", 3.14, \"Watson\", 7, \"Moriaty\")\nprint(\"Bienvenido, detective holmes!\")\nprint(\"Se ha encontrado una serie de pistas misteriosas!\")\nprint(\"Pistas encontradas:\", pistas)\n# Analisis de pistas\nprint(\"\\n analizando pistas\")\n#primera pregunta\nprint(pistas[0])\n#segunda pregunta\nprint(pistas[6])",
        "detail": "tuplas.sherlock",
        "documentation": {}
    },
    {
        "label": "a,b,c,d,e,f,g",
        "kind": 5,
        "importPath": "tuplas.sherlock",
        "description": "tuplas.sherlock",
        "peekOfCode": "a,b,c,d,e,f,g = pistas\nprint(a,b,c)\n#sexta pregunta\nnuevas_pistas = (\"boton\", \"puerta grande\", \"calaverita\", \"flechas\")\nprint(nuevas_pistas)\n#septima pregunta\nprint(pistas[4])\n#octava pregunta\nprint(pistas.count(7))",
        "detail": "tuplas.sherlock",
        "documentation": {}
    },
    {
        "label": "nuevas_pistas",
        "kind": 5,
        "importPath": "tuplas.sherlock",
        "description": "tuplas.sherlock",
        "peekOfCode": "nuevas_pistas = (\"boton\", \"puerta grande\", \"calaverita\", \"flechas\")\nprint(nuevas_pistas)\n#septima pregunta\nprint(pistas[4])\n#octava pregunta\nprint(pistas.count(7))",
        "detail": "tuplas.sherlock",
        "documentation": {}
    },
    {
        "label": "pesos_col",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "pesos_col = 0.00025\nSoles_pe = 0.28\nreales_bra = 0.21\npesos_col = int(input(\"¿cuantos pesos colombianos te quedan?\"))\nSoles_pe = int(input(\"¿cuantos soles peruanos te quedan?\"))\nreales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "Soles_pe",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "Soles_pe = 0.28\nreales_bra = 0.21\npesos_col = int(input(\"¿cuantos pesos colombianos te quedan?\"))\nSoles_pe = int(input(\"¿cuantos soles peruanos te quedan?\"))\nreales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "reales_bra",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "reales_bra = 0.21\npesos_col = int(input(\"¿cuantos pesos colombianos te quedan?\"))\nSoles_pe = int(input(\"¿cuantos soles peruanos te quedan?\"))\nreales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "pesos_col",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "pesos_col = int(input(\"¿cuantos pesos colombianos te quedan?\"))\nSoles_pe = int(input(\"¿cuantos soles peruanos te quedan?\"))\nreales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "Soles_pe",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "Soles_pe = int(input(\"¿cuantos soles peruanos te quedan?\"))\nreales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "reales_bra",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "reales_bra = int(input(\"¿cuantos reales brasileros te quedan?\"))\ntotal = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "total",
        "kind": 5,
        "importPath": "x.divisas",
        "description": "x.divisas",
        "peekOfCode": "total = pesos_col* 0.0025 + Soles_pe*0.28 + reales_bra*0.21\nprint(total)",
        "detail": "x.divisas",
        "documentation": {}
    },
    {
        "label": "peso",
        "kind": 5,
        "importPath": "x.imc",
        "description": "x.imc",
        "peekOfCode": "peso = 67\naltura = 1.68\nimc = peso / (altura**2)\nprint(f\"tu índice de imc es: {imc}\")",
        "detail": "x.imc",
        "documentation": {}
    },
    {
        "label": "altura",
        "kind": 5,
        "importPath": "x.imc",
        "description": "x.imc",
        "peekOfCode": "altura = 1.68\nimc = peso / (altura**2)\nprint(f\"tu índice de imc es: {imc}\")",
        "detail": "x.imc",
        "documentation": {}
    },
    {
        "label": "imc",
        "kind": 5,
        "importPath": "x.imc",
        "description": "x.imc",
        "peekOfCode": "imc = peso / (altura**2)\nprint(f\"tu índice de imc es: {imc}\")",
        "detail": "x.imc",
        "documentation": {}
    },
    {
        "label": "fahrenheit",
        "kind": 5,
        "importPath": "x.temperatura",
        "description": "x.temperatura",
        "peekOfCode": "fahrenheit = 59\nCelsius = (fahrenheit -32) /1.8\nprint(Celsius)",
        "detail": "x.temperatura",
        "documentation": {}
    },
    {
        "label": "Celsius",
        "kind": 5,
        "importPath": "x.temperatura",
        "description": "x.temperatura",
        "peekOfCode": "Celsius = (fahrenheit -32) /1.8\nprint(Celsius)",
        "detail": "x.temperatura",
        "documentation": {}
    }
]